<!DOCTYPE html>
<html lang="ko-kr">
<head>
    <title>상위 5위 공지사항 조회수</title>

    <meta charset="UTF-8">
    <link rel="stylesheet" href="./css/bulletinBoard.css">
    <%- alertMsg? `<script>alert("${alertMsg}")</script>` : '' %>

    </head>


<!-- 게시판 머리말 영역 -->
<div class="head">
    <h2>게시판</h2>
    <span>
    <a href="/bulletin/write" class="button">✎ 글쓰기</a>
    <a href="/" class="button" style="background-color:blue"> 처음으로 </a>
    </span>
</div>

<!-- 게시글 표시 영역 -->
<table>
    <thead><tr><th>제목</th><th>글쓴이</th><th>등록일</th><th>조회수</th></tr></thead>
<tbody>
    <% for (let k=0; k<postId.length;k++){ %>
        <tr>
            <td><a href="/bulletin/Detail/<%= postId[k] %>" class="post-link"><%= title[k] %>[<%= comments_count[k] %>]</a></td>
            <td><%= writerName[k] %>(<%= writerId[k] %>)</td>
            <td><%= created_at[k] %></td>
            <td><%= views[k] %></td>
        </tr>
    <% } %>
</tbody>
</table>

<!-- 다음 페이지 영역 -->
<div class="paging">
    <% if (currentPage > 1) { %>
        <a href="./?page=<%= currentPage - 1 %>"><이전 페이지></a>
    <% } %>

    <% for (let k = startPage; k <= endPage; k++) { %>
        <% if (k === currentPage) { %>
            <span class="current-page"><%= k %></span>
        <% } else { %>
            <a href="./?page=<%= k %>"><%= k %></a>
        <% } %>
    <% } %>

    <!-- 현재 페이지에서 한 화면에 처리하는 페이지 갯수 보다 하나라도 더 많으면 다음 링크로 이동할 수 있는 조건   -->
    <% if ( (totalPage - currentPage +1) > maxPageNumber ) { %>
        <a href="./?page=<%= currentPage + 1 %>"><다음 페이지></a>
    <% } %>

</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
<div style="width:80%; margin:auto;">
    <canvas id="salesChart"></canvas>
</div>

<script>
    // 5개의 인기상품 정의
    let bulletinNum= ['게시글1','게시글2','게시글3','게시글4','게시글5'];
    // 각 상품에 대한 색상 정의
    const colors = ['rgba(75,91,192,0.2)', 'rgba(213,116,136,0.2)', 'rgba(255,222,145,0.2)', 'rgba(149,198,229,0.2)', 'rgba(153, 102, 255, 0.2)'];

    // 초기 판매량 데이터 생성
    const initialData = bulletinNum.map(() => Math.floor(Math.random() * 10));

    // Chart.js를 사용하여 차트 생성
    const ctx = document.getElementById('salesChart').getContext('2d');
    const salesChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: bulletinNum,
            datasets: [{
                label: '조회수',
                data:  initialData,
                backgroundColor: colors,
                borderColor: 'gray',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });


    function updateData() {
        // 이전 데이터 가져오기
        const previousData = salesChart.data.datasets[0].data;

        // 새로운 데이터 생성 및 누적
        const newData = previousData.map(value => value + Math.floor(Math.random() * 3));

        // 차트에 새로운 데이터 설정
        salesChart.data.datasets[0].data = newData;

        // 차트 업데이트
        salesChart.update();}

    // 2초마다 데이터 업데이트
    setInterval(updateData, 2500);
</script>



</body>
</html>
